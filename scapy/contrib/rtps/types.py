"""
Real-Time Publish-Subscribe Protocol (RTPS) dissection

Copyright (C) 2021 Trend Micro Incorporated
Copyright (C) 2021 Alias Robotics S.L.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
Street, Fifth Floor, Boston, MA  02110-1301, USA.
"""

# scapy.contrib.description = RTPS wire protocol
# scapy.contrib.status = loads
# scapy.contrib.name = rtps

a = {
    0x0000: "PID_PAD",
    0x0001: "PID_SENTINEL",
    0x002C: "PID_USER_DATA",
    0x0005: "PID_TOPIC_NAME",
    0x0007: "PID_TYPE_NAME",
    0x002D: "PID_GROUP_DATA",
    0x002E: "PID_TOPIC_DATA",
    0x001D: "PID_DURABILITY",
    0x001E: "PID_DURABILITY_SERVICE",
    0x0023: "PID_DEADLINE",
    0x0027: "PID_LATENCY_BUDGET",
    0x001B: "PID_LIVELINESS",
    0x001A: "PID_RELIABILITY",
    0x002B: "PID_LIFESPAN",
    0x0025: "PID_DESTINATION_ORDER",
    0x0040: "PID_HISTORY",
    0x0041: "PID_RESOURCE_LIMITS",
    0x001F: "PID_OWNERSHIP",
    0x0006: "PID_OWNERSHIP_STRENGTH",
    0x0021: "PID_PRESENTATION",
    0x0029: "PID_PARTITION",
    0x0004: "PID_TIME_BASED_FILTER",
    0x0049: "PID_TRANSPORT_PRIORITY",
    0x000F: "PID_DOMAIN_ID",
    0x4014: "PID_DOMAIN_TAG",
    0x0015: "PID_PROTOCOL_VERSION",
    0x0016: "PID_VENDOR_ID",
    0x002F: "PID_UNICAST_LOCATOR",
    0x0030: "PID_MULTICAST_LOCATOR",
    0x0031: "PID_DEFAULT_UNICAST_LOCATOR",
    0x0048: "PID_DEFAULT_MULTICAST_LOCATOR",
    0x0032: "PID_METATRAFFIC_UNICAST_LOCATOR",
    0x0033: "PID_METATRAFFIC_MULTICAST_LOCATOR",
    0x0043: "PID_EXPECTS_INLINE_QOS",
    0x0034: "PID_PARTICIPANT_MANUAL_LIVELINESS_COUNT",
    0x0002: "PID_PARTICIPANT_LEASE_DURATION",
    0x0035: "PID_CONTENT_FILTER_PROPERTY",
    0x0050: "PID_PARTICIPANT_GUID",
    0x0052: "PID_GROUP_GUID",
    0x0058: "PID_BUILTIN_ENDPOINT_SET",
    0x0077: "PID_BUILTIN_ENDPOINT_QOS",
    0x0059: "PID_PROPERTY_LIST",
    0x0060: "PID_TYPE_MAX_SIZE_SERIALIZED",
    0x0062: "PID_ENTITY_NAME",
    0x005A: "PID_ENDPOINT_GUID",
    0x0011: "PID_MULTICAST_IPADDRESS",
    0x000C: "PID_DEFAULT_UNICAST_IPADDRESS",
    0x000E: "PID_DEFAULT_UNICAST_PORT",
    0x0045: "PID_METATRAFFIC_UNICAST_IPADDRESS",
    0x000D: "PID_METATRAFFIC_UNICAST_PORT",
    0x000B: "PID_METATRAFFIC_MULTICAST_IPADDRESS",
    0x0046: "PID_METATRAFFIC_MULTICAST_PORT",
    0x0044: "PID_PARTICIPANT_BUILTIN_ENDPOINTS",
    0x0053: "PID_GROUP_ENTITYID",
    0x0070: "PID_KEY_HASH",
    0x0071: "PID_STATUS_INFO",
}

b = {
    0x0000: "PID_PAD",
    0x0001: "PID_SENTINEL",
    0x002C: "PID_USER_DATA",
    0x0005: "PID_TOPIC_NAME",
    0x0007: "PID_TYPE_NAME",
    0x002D: "PID_GROUP_DATA",
    0x002E: "PID_TOPIC_DATA",
    0x001D: "PID_DURABILITY",
    0x001E: "PID_DURABILITY_SERVICE",
    0x0023: "PID_DEADLINE",
    0x0027: "PID_LATENCY_BUDGET",
    0x001B: "PID_LIVELINESS",
    0x001A: "PID_RELIABILITY",
    0x002B: "PID_LIFESPAN",
    0x0025: "PID_DESTINATION_ORDER",
    0x0040: "PID_HISTORY",
    0x0041: "PID_RESOURCE_LIMITS",
    0x001F: "PID_OWNERSHIP",
    0x0006: "PID_OWNERSHIP_STRENGTH",
    0x0021: "PID_PRESENTATION",
    0x0029: "PID_PARTITION",
    0x0004: "PID_TIME_BASED_FILTER",
    0x0049: "PID_TRANSPORT_PRIORITY",
    0x0015: "PID_PROTOCOL_VERSION",
    0x0016: "PID_VENDOR_ID",
    0x002F: "PID_UNICAST_LOCATOR",
    0x0030: "PID_MULTICAST_LOCATOR",
    0x0011: "PID_MULTICAST_IPADDRESS",
    0x0031: "PID_DEFAULT_UNICAST_LOCATOR",
    0x0048: "PID_DEFAULT_MULTICAST_LOCATOR",
    0x0032: "PID_METATRAFFIC_UNICAST_LOCATOR",
    0x0033: "PID_METATRAFFIC_MULTICAST_LOCATOR",
    0x000C: "PID_DEFAULT_UNICAST_IPADDRESS",
    0x000E: "PID_DEFAULT_UNICAST_PORT",
    0x0045: "PID_METATRAFFIC_UNICAST_IPADDRESS",
    0x000D: "PID_METATRAFFIC_UNICAST_PORT",
    0x000B: "PID_METATRAFFIC_MULTICAST_IPADDRESS",
    0x0046: "PID_METATRAFFIC_MULTICAST_PORT",
    0x0043: "PID_EXPECTS_INLINE_QOS",
    0x0034: "PID_PARTICIPANT_MANUAL_LIVELINESS_COUNT",
    0x0044: "PID_PARTICIPANT_BUILTIN_ENDPOINTS",
    0x0002: "PID_PARTICIPANT_LEASE_DURATION",
    0x0035: "PID_CONTENT_FILTER_PROPERTY",
    0x0050: "PID_PARTICIPANT_GUID",
    0x0052: "PID_GROUP_GUID",
    0x0053: "PID_GROUP_ENTITYID",
    0x0058: "PID_BUILTIN_ENDPOINT_SET",
    0x0059: "PID_PROPERTY_LIST",
    0x0060: "PID_TYPE_MAX_SIZE_SERIALIZED",
    0x0062: "PID_ENTITY_NAME",
    0x0070: "PID_KEY_HASH",
    0x0071: "PID_STATUS_INFO",
    0x000F: "PID_DOMAIN_ID",
}

for n, i in a.items():
    if n in b:
        if b.get(n) != i:
            print(f"n = {n} -> {i} â‰  {b.get(n)}")
    elif n not in b:
        print(f"0x{n:04x} -> {i}")

print("--")

for n, i in b.items():
    if n not in a:
        print(f'0x{n:04x}: "{i}",')

print("--")

for key in sorted(a):
    print(f'0x{key:04x}: "{a.get(key)}",')

print(f"{len(a)} keys")
